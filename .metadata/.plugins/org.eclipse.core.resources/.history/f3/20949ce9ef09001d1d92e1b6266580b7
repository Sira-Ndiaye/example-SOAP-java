
package domaine;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserServices", targetNamespace = "http://domaine/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserServices {


    /**
     * 
     * @return
     *     returns java.util.List<domaine.User>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listerUtilisateurs", targetNamespace = "http://domaine/", className = "domaine.ListerUtilisateurs")
    @ResponseWrapper(localName = "listerUtilisateursResponse", targetNamespace = "http://domaine/", className = "domaine.ListerUtilisateursResponse")
    @Action(input = "http://domaine/UserServices/listerUtilisateursRequest", output = "http://domaine/UserServices/listerUtilisateursResponse")
    public List<User> listerUtilisateurs();

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "ajouterUtilisateur", targetNamespace = "http://domaine/", className = "domaine.AjouterUtilisateur")
    @ResponseWrapper(localName = "ajouterUtilisateurResponse", targetNamespace = "http://domaine/", className = "domaine.AjouterUtilisateurResponse")
    @Action(input = "http://domaine/UserServices/ajouterUtilisateurRequest", output = "http://domaine/UserServices/ajouterUtilisateurResponse")
    public void ajouterUtilisateur(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        UserType arg2);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "supprimerUtilisateur", targetNamespace = "http://domaine/", className = "domaine.SupprimerUtilisateur")
    @ResponseWrapper(localName = "supprimerUtilisateurResponse", targetNamespace = "http://domaine/", className = "domaine.SupprimerUtilisateurResponse")
    @Action(input = "http://domaine/UserServices/supprimerUtilisateurRequest", output = "http://domaine/UserServices/supprimerUtilisateurResponse")
    public void supprimerUtilisateur(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "modifierUtilisateur", targetNamespace = "http://domaine/", className = "domaine.ModifierUtilisateur")
    @ResponseWrapper(localName = "modifierUtilisateurResponse", targetNamespace = "http://domaine/", className = "domaine.ModifierUtilisateurResponse")
    @Action(input = "http://domaine/UserServices/modifierUtilisateurRequest", output = "http://domaine/UserServices/modifierUtilisateurResponse")
    public void modifierUtilisateur(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "seConnecter", targetNamespace = "http://domaine/", className = "domaine.SeConnecter")
    @ResponseWrapper(localName = "seConnecterResponse", targetNamespace = "http://domaine/", className = "domaine.SeConnecterResponse")
    @Action(input = "http://domaine/UserServices/seConnecterRequest", output = "http://domaine/UserServices/seConnecterResponse")
    public void seConnecter(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
